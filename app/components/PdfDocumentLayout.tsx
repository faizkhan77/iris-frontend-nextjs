// app/components/PdfDocumentLayout.tsx
"use client";

import React from "react";
import ReactMarkdown from "react-markdown";
import remarkGfm from "remark-gfm";
import { Message, UiComponent } from "./ChatMessages";
import IrisLogo from "./IrisLogo";
import Image from "next/image";

// Import your chart components
import { StockPriceChart } from "./charts/StockPriceChart";
import { RankingBarChart } from "./charts/RankingBarChart";
import { ShareholdingPieChart } from "./charts/ShareholdingPieChart";

interface PdfDocumentLayoutProps {
  message: Message | null;
  forwardedRef: React.Ref<HTMLDivElement>;
}

// This function renders the UI components inside the PDF
const renderPdfUiComponent = (component: UiComponent, index: number) => {
  switch (component.type) {
    case "stock_price_chart":
      return (
        <StockPriceChart
          key={index}
          data={component.data}
          title={component.title}
          animationDuration={0}
        />
      );
    case "ranking_bar_chart":
      return (
        <RankingBarChart
          key={index}
          data={component.data}
          title={component.title}
          labelKey={component.labelKey}
          valueKey={component.valueKey}
          animationDuration={0}
        />
      );
    case "pie_chart":
      return (
        <ShareholdingPieChart
          key={index}
          data={component.data}
          title={component.title}
          animationDuration={0}
        />
      );
    case "clarification_options":
    case "vertical_suggestions":
      return null;
    default:
      return null;
  }
};

export const PdfDocumentLayout = ({
  message,
  forwardedRef,
}: PdfDocumentLayoutProps) => {
  if (!message) return null;

  return (
    // This is the single container that will be captured.
    // It's styled with a fixed width for consistency.
    <div
      ref={forwardedRef}
      className="absolute -top-[9999px] -left-[9999px]"
      style={{ width: "800px", fontFamily: "sans-serif" }}
    >
      {/* --- COVER PAGE SECTION --- */}
      <div
        className="flex flex-col justify-between p-12 text-white"
        style={{
          minHeight: "1050px", // Approximate A4 height
          background: "linear-gradient(135deg, #0f172a 0%, #1e3a8a 100%)", // A professional slate/blue gradient
        }}
      >
        {/* Top Header */}
        <div>
          <Image
            src="/brainfoglogo-dark.png"
            alt="Brainfog Logo"
            width={150}
            height={150}
          />
        </div>

        {/* Center Content */}
        <div className="text-center">
          <h1 className="text-5xl font-bold tracking-tight">
            Financial Analysis Report
          </h1>
          <p className="mt-4 text-xl opacity-80">AI-Powered Insights</p>
        </div>

        {/* Bottom Footer */}
        <div className="text-sm opacity-80">
          <div className="flex justify-between items-end">
            <div>
              <p className="font-semibold">Prepared by</p>
              <IrisLogo className="!text-3xl !from-white !to-blue-300" />
            </div>
            <div className="text-right">
              <p className="font-semibold">Generated On</p>
              <p className="text-2xl font-light">
                {new Date().toLocaleDateString("en-GB")}
              </p>
            </div>
          </div>
        </div>
      </div>

      {/* --- CONTENT SECTION --- */}
      {/* This will start on a new page in the PDF */}
      <div
        className="bg-white text-gray-900 p-12"
        style={{ minHeight: "1050px" }}
      >
        <h2 className="text-3xl font-bold border-b-2 border-gray-200 pb-3 mb-8 text-slate-800">
          IRIS Analysis Summary
        </h2>

        {/* RENDER UI COMPONENTS (CHARTS) */}
        {message.uiComponents && message.uiComponents.length > 0 && (
          <div className="space-y-12 mb-10">
            {message.uiComponents.map(renderPdfUiComponent)}
          </div>
        )}

        {/* RENDER MARKDOWN CONTENT */}
        <div className="prose prose-lg max-w-none text-slate-700">
          <ReactMarkdown remarkPlugins={[remarkGfm]}>
            {message.content}
          </ReactMarkdown>
        </div>

        {/* Footer for content pages */}
        <div className="pt-16 mt-auto text-center text-xs text-gray-400">
          <p>
            This document contains AI-generated analysis and should not be
            considered as financial advice.
          </p>
          <p>Generated by IRIS Financial Analyst | Brainfog</p>
        </div>
      </div>
    </div>
  );
};
